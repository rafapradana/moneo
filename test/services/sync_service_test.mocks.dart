// Mocks generated by Mockito 5.4.6 from annotations
// in moneo/test/services/sync_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:drift/drift.dart' as _i3;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:moneo/models/dao/category_dao.dart' as _i6;
import 'package:moneo/models/dao/recurring_transaction_dao.dart' as _i8;
import 'package:moneo/models/dao/transaction_dao.dart' as _i7;
import 'package:moneo/models/dao/wallet_dao.dart' as _i5;
import 'package:moneo/models/database.dart' as _i4;
import 'package:moneo/services/auth_service.dart' as _i12;
import 'package:supabase/supabase.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFunctionsClient_0 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStorageClient_1 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeClient_2 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestClient_3 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueClient_4 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQuerySchema_6 extends _i1.SmartFake
    implements _i2.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestFilterBuilder_7<T1> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeChannel_8 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResponse_9 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrationStrategy_10 extends _i1.SmartFake
    implements _i3.MigrationStrategy {
  _FakeMigrationStrategy_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$WalletsTable_11 extends _i1.SmartFake implements _i4.$WalletsTable {
  _Fake$WalletsTable_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$CategoriesTable_12 extends _i1.SmartFake
    implements _i4.$CategoriesTable {
  _Fake$CategoriesTable_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$TransactionsTable_13 extends _i1.SmartFake
    implements _i4.$TransactionsTable {
  _Fake$TransactionsTable_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$RecurringTransactionsTable_14 extends _i1.SmartFake
    implements _i4.$RecurringTransactionsTable {
  _Fake$RecurringTransactionsTable_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeWalletDao_15 extends _i1.SmartFake implements _i5.WalletDao {
  _FakeWalletDao_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCategoryDao_16 extends _i1.SmartFake implements _i6.CategoryDao {
  _FakeCategoryDao_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransactionDao_17 extends _i1.SmartFake
    implements _i7.TransactionDao {
  _FakeTransactionDao_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRecurringTransactionDao_18 extends _i1.SmartFake
    implements _i8.RecurringTransactionDao {
  _FakeRecurringTransactionDao_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$MoneoDatabaseManager_19 extends _i1.SmartFake
    implements _i4.$MoneoDatabaseManager {
  _Fake$MoneoDatabaseManager_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_20 extends _i1.SmartFake
    implements _i3.GeneratedDatabase {
  _FakeGeneratedDatabase_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_21 extends _i1.SmartFake
    implements _i3.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_22 extends _i1.SmartFake
    implements _i3.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_23 extends _i1.SmartFake
    implements _i3.DatabaseConnection {
  _FakeDatabaseConnection_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_24 extends _i1.SmartFake implements _i3.QueryExecutor {
  _FakeQueryExecutor_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_25 extends _i1.SmartFake
    implements _i9.StreamQueryStore {
  _FakeStreamQueryStore_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_26 extends _i1.SmartFake
    implements _i3.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_27 extends _i1.SmartFake implements _i3.Migrator {
  _FakeMigrator_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_28<T1> extends _i1.SmartFake implements _i10.Future<T1> {
  _FakeFuture_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_29<T1 extends _i3.Table, D1> extends _i1.SmartFake
    implements _i3.InsertStatement<T1, D1> {
  _FakeInsertStatement_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_30<T extends _i3.Table, D> extends _i1.SmartFake
    implements _i3.UpdateStatement<T, D> {
  _FakeUpdateStatement_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_31<T1 extends _i3.HasResultSet, D>
    extends _i1.SmartFake
    implements _i3.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_32<FirstT extends _i3.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i3.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_33<Row> extends _i1.SmartFake
    implements _i3.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_33(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_34<T1 extends _i3.Table, D1> extends _i1.SmartFake
    implements _i3.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_35<T> extends _i1.SmartFake implements _i3.Selectable<T> {
  _FakeSelectable_35(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_36 extends _i1.SmartFake
    implements _i3.GenerationContext {
  _FakeGenerationContext_36(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i2.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FunctionsClient get functions =>
      (super.noSuchMethod(
            Invocation.getter(#functions),
            returnValue: _FakeFunctionsClient_0(
              this,
              Invocation.getter(#functions),
            ),
          )
          as _i2.FunctionsClient);

  @override
  _i2.SupabaseStorageClient get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeSupabaseStorageClient_1(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i2.SupabaseStorageClient);

  @override
  _i2.RealtimeClient get realtime =>
      (super.noSuchMethod(
            Invocation.getter(#realtime),
            returnValue: _FakeRealtimeClient_2(
              this,
              Invocation.getter(#realtime),
            ),
          )
          as _i2.RealtimeClient);

  @override
  _i2.PostgrestClient get rest =>
      (super.noSuchMethod(
            Invocation.getter(#rest),
            returnValue: _FakePostgrestClient_3(this, Invocation.getter(#rest)),
          )
          as _i2.PostgrestClient);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i2.GoTrueClient get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeGoTrueClient_4(this, Invocation.getter(#auth)),
          )
          as _i2.GoTrueClient);

  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
    Invocation.setter(#functions, _functions),
    returnValueForMissingStub: null,
  );

  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
    Invocation.setter(#storage, _storage),
    returnValueForMissingStub: null,
  );

  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
    Invocation.setter(#realtime, _realtime),
    returnValueForMissingStub: null,
  );

  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
    Invocation.setter(#rest, _rest),
    returnValueForMissingStub: null,
  );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  _i2.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_5(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseQuerySchema schema(String? schema) =>
      (super.noSuchMethod(
            Invocation.method(#schema, [schema]),
            returnValue: _FakeSupabaseQuerySchema_6(
              this,
              Invocation.method(#schema, [schema]),
            ),
          )
          as _i2.SupabaseQuerySchema);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            returnValue: _FakePostgrestFilterBuilder_7<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
          )
          as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#channel, [name], {#opts: opts}),
            returnValue: _FakeRealtimeChannel_8(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
          )
          as _i2.RealtimeChannel);

  @override
  List<_i2.RealtimeChannel> getChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getChannels, []),
            returnValue: <_i2.RealtimeChannel>[],
          )
          as List<_i2.RealtimeChannel>);

  @override
  _i10.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
            Invocation.method(#removeChannel, [channel]),
            returnValue: _i10.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
          )
          as _i10.Future<String>);

  @override
  _i10.Future<List<String>> removeAllChannels() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllChannels, []),
            returnValue: _i10.Future<List<String>>.value(<String>[]),
          )
          as _i10.Future<List<String>>);

  @override
  _i10.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i12.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<bool> get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: _i10.Future<bool>.value(false),
          )
          as _i10.Future<bool>);

  @override
  _i10.Future<_i2.User?> get currentUser =>
      (super.noSuchMethod(
            Invocation.getter(#currentUser),
            returnValue: _i10.Future<_i2.User?>.value(),
          )
          as _i10.Future<_i2.User?>);

  @override
  _i10.Stream<_i2.AuthState> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i10.Stream<_i2.AuthState>.empty(),
          )
          as _i10.Stream<_i2.AuthState>);

  @override
  _i10.Future<bool> get hasValidSession =>
      (super.noSuchMethod(
            Invocation.getter(#hasValidSession),
            returnValue: _i10.Future<bool>.value(false),
          )
          as _i10.Future<bool>);

  @override
  _i10.Future<_i2.AuthResponse> signUp(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [email, password]),
            returnValue: _i10.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_9(
                this,
                Invocation.method(#signUp, [email, password]),
              ),
            ),
          )
          as _i10.Future<_i2.AuthResponse>);

  @override
  _i10.Future<_i2.AuthResponse> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i10.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_9(
                this,
                Invocation.method(#signIn, [email, password]),
              ),
            ),
          )
          as _i10.Future<_i2.AuthResponse>);

  @override
  _i10.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<_i2.AuthResponse> refreshSession() =>
      (super.noSuchMethod(
            Invocation.method(#refreshSession, []),
            returnValue: _i10.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_9(this, Invocation.method(#refreshSession, [])),
            ),
          )
          as _i10.Future<_i2.AuthResponse>);
}

/// A class which mocks [MoneoDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoneoDatabase extends _i1.Mock implements _i4.MoneoDatabase {
  MockMoneoDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);

  @override
  _i3.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_10(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i3.MigrationStrategy);

  @override
  _i4.$WalletsTable get wallets =>
      (super.noSuchMethod(
            Invocation.getter(#wallets),
            returnValue: _Fake$WalletsTable_11(
              this,
              Invocation.getter(#wallets),
            ),
          )
          as _i4.$WalletsTable);

  @override
  _i4.$CategoriesTable get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: _Fake$CategoriesTable_12(
              this,
              Invocation.getter(#categories),
            ),
          )
          as _i4.$CategoriesTable);

  @override
  _i4.$TransactionsTable get transactions =>
      (super.noSuchMethod(
            Invocation.getter(#transactions),
            returnValue: _Fake$TransactionsTable_13(
              this,
              Invocation.getter(#transactions),
            ),
          )
          as _i4.$TransactionsTable);

  @override
  _i4.$RecurringTransactionsTable get recurringTransactions =>
      (super.noSuchMethod(
            Invocation.getter(#recurringTransactions),
            returnValue: _Fake$RecurringTransactionsTable_14(
              this,
              Invocation.getter(#recurringTransactions),
            ),
          )
          as _i4.$RecurringTransactionsTable);

  @override
  _i5.WalletDao get walletDao =>
      (super.noSuchMethod(
            Invocation.getter(#walletDao),
            returnValue: _FakeWalletDao_15(this, Invocation.getter(#walletDao)),
          )
          as _i5.WalletDao);

  @override
  _i6.CategoryDao get categoryDao =>
      (super.noSuchMethod(
            Invocation.getter(#categoryDao),
            returnValue: _FakeCategoryDao_16(
              this,
              Invocation.getter(#categoryDao),
            ),
          )
          as _i6.CategoryDao);

  @override
  _i7.TransactionDao get transactionDao =>
      (super.noSuchMethod(
            Invocation.getter(#transactionDao),
            returnValue: _FakeTransactionDao_17(
              this,
              Invocation.getter(#transactionDao),
            ),
          )
          as _i7.TransactionDao);

  @override
  _i8.RecurringTransactionDao get recurringTransactionDao =>
      (super.noSuchMethod(
            Invocation.getter(#recurringTransactionDao),
            returnValue: _FakeRecurringTransactionDao_18(
              this,
              Invocation.getter(#recurringTransactionDao),
            ),
          )
          as _i8.RecurringTransactionDao);

  @override
  _i4.$MoneoDatabaseManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$MoneoDatabaseManager_19(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i4.$MoneoDatabaseManager);

  @override
  Iterable<_i3.TableInfo<_i3.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i3.TableInfo<_i3.Table, Object?>>[],
          )
          as Iterable<_i3.TableInfo<_i3.Table, Object?>>);

  @override
  List<_i3.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i3.DatabaseSchemaEntity>[],
          )
          as List<_i3.DatabaseSchemaEntity>);

  @override
  _i3.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_20(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i3.GeneratedDatabase);

  @override
  _i3.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_21(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i3.DriftDatabaseOptions);

  @override
  _i3.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_22(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i3.StreamQueryUpdateRules);

  @override
  _i3.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_23(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i3.DatabaseConnection);

  @override
  _i3.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i11.dummyValue<_i3.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i3.SqlTypes);

  @override
  _i3.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_24(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i3.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_25(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i9.StreamQueryStore);

  @override
  _i3.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_26(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i3.DatabaseConnectionUser);

  @override
  _i3.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_27(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i3.Migrator);

  @override
  _i10.Future<void> beforeOpen(
    _i3.QueryExecutor? executor,
    _i3.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
    _i9.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i10.Stream<T>.empty(),
          )
          as _i10.Stream<T>);

  @override
  T alias<T, D>(_i3.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i11.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i3.TableInfo<_i3.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i3.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Stream<Set<_i3.TableUpdate>> tableUpdates([
    _i3.TableUpdateQuery? query = const _i3.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i10.Stream<Set<_i3.TableUpdate>>.empty(),
          )
          as _i10.Stream<Set<_i3.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
    _i10.FutureOr<T> Function(_i3.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i11.ifNotNull(
                  _i11.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_28<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i10.Future<T>);

  @override
  _i3.InsertStatement<T, D> into<T extends _i3.Table, D>(
    _i3.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_29<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i3.InsertStatement<T, D>);

  @override
  _i3.UpdateStatement<Tbl, R> update<Tbl extends _i3.Table, R>(
    _i3.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_30<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i3.UpdateStatement<Tbl, R>);

  @override
  _i3.SimpleSelectStatement<T, R> select<T extends _i3.HasResultSet, R>(
    _i3.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_31<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i3.SimpleSelectStatement<T, R>);

  @override
  _i3.JoinedSelectStatement<T, R> selectOnly<T extends _i3.HasResultSet, R>(
    _i3.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_32<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i3.JoinedSelectStatement<T, R>);

  @override
  _i3.BaseSelectStatement<_i3.TypedResult> selectExpressions(
    Iterable<_i3.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_33<_i3.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i3.BaseSelectStatement<_i3.TypedResult>);

  @override
  _i3.DeleteStatement<T, D> delete<T extends _i3.Table, D>(
    _i3.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_34<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i3.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i3.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<List<_i3.QueryRow>> customWriteReturning(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i3.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<List<_i3.QueryRow>>.value(
              <_i3.QueryRow>[],
            ),
          )
          as _i10.Future<List<_i3.QueryRow>>);

  @override
  _i3.Selectable<_i3.QueryRow> customSelect(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_35<_i3.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i3.Selectable<_i3.QueryRow>);

  @override
  _i3.Selectable<_i3.QueryRow> customSelectQuery(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_35<_i3.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i3.Selectable<_i3.QueryRow>);

  @override
  _i10.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i11.ifNotNull(
                  _i11.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_28<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i11.ifNotNull(
                  _i11.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_28<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
    _i10.FutureOr<void> Function(_i3.Batch)? runInBatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i3.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i11.ifNotNull(
                  _i11.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_28<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i3.GenerationContext $write(
    _i3.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_36(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i3.GenerationContext);

  @override
  _i3.GenerationContext $writeInsertable(
    _i3.TableInfo<_i3.Table, dynamic>? table,
    _i3.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_36(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i3.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}
